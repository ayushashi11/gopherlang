type Person{
    @str name
    @float age
}
@Person pers1;
pers1 = Person{"John\\nlenon","90"};
pers2:Person = Person::new("Leonhardt","20");
println pers1::getName();
println pers2::name;
println pers1::getAge();
println switch 1 {
    l[3,0:2] {
        ret "1+1=2";
    }
    3 {
        ret "3";
    }
}
else{
    ret 7;
};
x=0;
y=1;
z=2
w:list=[x,y,z]
x+=y
y*=z
z**=y
println [x,y,z,w]
w=>x;
println x
impl Person{
    fn new(name,age=0){
        prs:Person = Person{name,age};
        ret prs;
    }
    fn __init(name){
        ret this::new(name);
    }
    fn getName(){
        ret this::name;
    }
    fn getAge(){
        ret this::age;
    }
}